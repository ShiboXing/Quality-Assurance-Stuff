
public class Game {
	Boolean[] itemsObtained = {false, false, false};
	String[] items = {"caffeinated coffee", "sweet sugar", "creamy cream"};
	Room start;
	Room northmost;
	//pass in the first room
	public Game(Room myStart)
	{
		start=myStart;
		northmost = start;
	}
	
	// Look at the item variable for the room, if it is -1 say there is nothing in the room, if it is 0, 1, or 2 get the corresponding
	// item and say it is in the room, then set the corresponding itemsObtained array value to true
	public String look() {
		if(start.getItem()==-1)
			return "You don't see anything out of the ordinary.";
		int index=start.getItem();
		itemsObtained[index]=true;
		return "You found some "+ items[index]+"!";
	}
	
	//returns the current room that the user is in
	public Room getRoom()
	{
		return start;
	}
	
	// Check the north door variable for the room, if it is null say there is no room north and do nothing else. If it isn't null
	// get the northern room from the current room and set the start variable to the new room.
	public Room moveNorth() {
		Room next=start.getNorth();
		if (next==null)
			System.out.println("You cannot move north");
		else 
			start=next;
		return start;
	}
	
	// Check the south door variable for the room, if it is null say there is no room south and do nothing else. If it isn't null
	// get the southern room from the current room and set the start variable to the new room.
	public Room moveSouth() {
		Room next=start.getSouth();
		if (next==null)
			System.out.println("You cannot move south");
		else 
			start=next;
		return start;
	}
	
	// Check the itemsObtained array. If all three variables are true display a win screen and exit, if not display a lose screen
	// and exit.
	public boolean drink() {
		for (boolean val: itemsObtained)
			if (!val)
				return false;
		return true;
	}
	
	// Display each command with a brief description of what they do.
	public String help() {
		return "\"N\" to go North, \"S\" to go South, \"L\" to Look for items, \"I\" for Inventory, \"H\" for Help, or \"D\" to Drink.";
	}
	
	// Check the itemsObtained array one by one. If the value is false say the player does not have the corresponding item, if it
	// is true say that the player does have the corresponding item.
	public String inventory() {
		String res="";
		for(int i =0;i<itemsObtained.length;i++)
			if(itemsObtained[i])
				res+=items[i]+" ";
		
			return res;
	}
	
	// Create a room and set the northernmost variable to it.
	public void addRoomNorth(Room room) {
		northmost.setNorth(room);
		northmost=room;
		return northmost;
	}
	
	
	
	
	// Display all relevant information about a room.
	public String displayRoom() {
		return "You see a "+start.getAdjective()+" room, a "+start.getObject()+", a "
				+ start.getNorthDoor()+" leading north and a "+start.getSouthDoor()+" leading south";
	}
}
